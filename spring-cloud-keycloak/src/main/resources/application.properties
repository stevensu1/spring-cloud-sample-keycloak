server.port=8080
spring.application.name=service-auth

# 客户端1：使用 authorization_code 授权类型
spring.security.oauth2.client.registration.keycloak-authorization-code.client-id=login-app
spring.security.oauth2.client.registration.keycloak-authorization-code.client-secret=K9IfVKjj1H0ujciRWsO8eU9b9dMdHfPh
spring.security.oauth2.client.registration.keycloak-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak-authorization-code.redirect-uri=http://192.168.0.11:8080/login/oauth2/code/keycloak-authorization-code
spring.security.oauth2.client.registration.keycloak-authorization-code.scope=openid,profile,email
spring.security.oauth2.client.provider.keycloak-authorization-code.issuer-uri=http://localhost:8180/realms/SpringBootKeycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/SpringBootKeycloak

# 客户端2：使用 client_credentials 授权类型
spring.security.oauth2.client.registration.keycloak-client-credentials.client-id=resource-server
spring.security.oauth2.client.registration.keycloak-client-credentials.client-secret=liBcabYqvbVj8z4efzbVbA94C33h6WkR
spring.security.oauth2.client.registration.keycloak-client-credentials.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak-client-credentials.scope=openid
spring.security.oauth2.client.provider.keycloak-client-credentials.token-uri=http://localhost:8180/realms/SpringBootKeycloak/protocol/openid-connect/token

#启用 spring cloud nacos discovery
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848